{"version":3,"sources":["../../src/components/feature.js"],"names":[],"mappings":"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","file":"feature.js","sourcesContent":["import React from 'react';\nimport {GeoJSON} from '../utils/utils';\nwindow.GeoJSON = GeoJSON;\n\n//Rational: This component emulates the google Data.Feature. \n//It lives in the context of a <DataLayer /> Component and interfaces with it's Data object that has been passed as prop to it.\nclass Feature extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'Feature';\n\n    \tthis.state = {\n    \t\tfeature : null,\n    \t\tlisteners : [],\n    \t\tgeoJson : null\n    \t}\n\n    \tthis.initListeners = this.initListeners.bind(this);\n    \tthis.addListener = this.addListener.bind(this);\n    \tthis.removeListeners = this.removeListeners.bind(this);\n    \t//Check props.\n    \tthis.checkPropEditable = this.checkPropEditable.bind(this);\n\n    \tthis.updateFeatureGeometry = this.updateFeatureGeometry.bind(this);\n    \tthis.getGeometryForFeature = this.getGeometryForFeature.bind(this);\n    \tthis.generateFeatureFromGeoJson = this.generateFeatureFromGeoJson.bind(this);\n    }\n    ///--------------------------------Listener Management Methods-----------------------------------///\n    initListeners() {\n  \t\t//Set geometry listener.\n  \t\tthis.addListener(this.props.data.addListener('setgeometry', (event) => {\n        var {feature} = event;\n  \t\t\tif(feature.getId() == this.state.feature.getId()) {\n      \t\t\tfeature.toGeoJson(geoJson => this.setState({geoJson : JSON.parse(JSON.stringify(geoJson))},() => {\n              if(typeof this.props.onChange === 'function')\n        \t\t\t\tthis.props.onChange(geoJson);\n      \t\t\t}));\n  \t\t\t}\n  \t\t}));\n\n      //Polygon clicked.\n      this.addListener(this.props.data.addListener('click', (event) => {\n        var {feature} = event;\n        if(feature.getId() == this.state.feature.getId()) {\n          event.stop();\n          var coords = event.latLng.toJSON()\n          coords[0] = coords.lng;\n          coords[1] = coords.lat;\n\n          if(this.props.onClick)\n            this.props.onClick({id : this.props.id, coords });\n        }\n      }));\n    }\n    removeListeners(callback) {\n    \tthis.state.listeners.forEach(listener => listener.remove());\n    \tthis.setState({listeners : []}, callback ? callback : ()=>{});\n    }\n    addListener(listener, callback) {\n    \tvar listeners = this.state.listeners.slice();\n    \tlisteners.push(listener);\n    \tthis.setState({listeners}, callback ? callback : ()=>{});\n    }\n    ///--------------------------------Lifecycle Methods-----------------------------------///\n    componentWillReceiveProps(nextProps) {\n    \tconsole.log(\"F: componentWillRecieveProps\");\n\t\tif(nextProps.data && this.state.feature) {\n\t   \t\tthis.checkPropEditable(nextProps);\n\t   \t\tthis.updateFeatureGeometry(nextProps.geoJson)\n\n    \t}\n    \t// console.log(\"Feature will recieve props.\");\n    }\n    componentWillUpdate(nextProps, nextState) {\n     \tconsole.log(\"F: componentWillUpdate\")\n    }\n    // shouldComponentUpdate(nextProps, nextState) {\n    // \treturn false;\n    // }\n    componentDidMount() {\n      console.log(\"F: componentDidMount\")\n      if(this.props.data) {\n\n        var id = undefined;\n        // console.log(\"Feature Mounted with ID:\", this.props.id);\n        if(this.props.id) {\n          id = this.props.id\n        }//Force the user to supply the property to use as the id.\n        var feature;\n        try {\n      feature = this.generateFeatureFromGeoJson(this.props.geoJson)\n        }\n        catch(e)\n        {\n          console.error(e);\n        }\n\n        this.setState({\n          feature,\n          geoJson : JSON.parse(JSON.stringify(this.props.geoJson)) //Deep copy\n        }, () => {\n          this.props.data.add(feature);\n\n\n          //Setup listeners for this features.\n          if(this.props.onChange)\n          \n          this.initListeners();\n          this.checkPropEditable(this.props);\n        })\n      }\n      else\n        console.error(new Error(\"You must put this <Feature /> component within the context of a <DataLayer /> Component.\"))\n    }\n    componentWillUnmount() {\n      console.error(\"Feature unmounting.\");\n      if(this.props.data)\n        this.props.data.remove(this.state.feature);\n\n      if(this.state.listeners)\n        this.removeListeners();\n    }\n\n    ///--------------------------------Google Data.Feature Managmenent Methods-----------------------------------///\n    updateFeatureGeometry(geoJson) {\n    \t//resets the geometry to match the geojson.\n    \tvar resetGeometry = f => {\n\t   \t\t// this.removeListeners(() => {\n\t\t    \tvar geometry = this.getGeometryForFeature(geoJson);\n\t\t    \tthis.state.feature.setGeometry(geometry);\n\t\t    \tconsole.log(\"F: refreshed geometry for id: \", this.props.id);\n\t\t   \t\t// this.initListeners(); //Restart the listening on this geometry.\n   \t\t\t// }); //Stop all listening on this geometry.\n    \t}\n\n    \t//Diff: this logic block makes sure that we have to reset the geometry.\n    \tif(this.state.feature) {\n    \t\tvar type = this.state.feature.getGeometry().getType();\n    \t\tswitch(type) {\n    \t\t\tcase \"Polygon\":\n    \t\t\t\tvar currGeoJson = this.state.geoJson;\n\t\t   \t\t\t//If the coordinates length is not the same, obviously something changed so reset the geometry.\n\t\t   \t\t\tif(geoJson.geometry.coordinates[0].length != currGeoJson.geometry.coordinates[0].length) {\n\t\t   \t\t\t\tconsole.log(\"F: Entered unequal coordinate block for id: \", this.props.id);\n\t\t   \t\t\t\tresetGeometry();\n\t\t   \t\t\t}\n\t\t   \t\t\t//If the coordinate lengths are the same, check to see if all of the points are equal. If any of them are not equal, obviously something changed so reset the geometry.\n\t\t   \t\t\telse {\n\t\t   \t\t\t\tconsole.log(\"F: Starting coordinate comparison for id: \", this.props.id , currGeoJson.geometry.coordinates[0], geoJson.geometry.coordinates[0]);\n\n\t\t   \t\t\t\tfor (var i = currGeoJson.geometry.coordinates[0].length - 1; i >= 0; i--) {\n\t\t   \t\t\t\t\tvar currPoint = currGeoJson.geometry.coordinates[0][i];\n\t\t   \t\t\t\t\tvar newPoint = geoJson.geometry.coordinates[0][i];\n\t\t   \t\t\t\t\tif(currPoint[0] != newPoint[0] || currPoint[1] != newPoint[1]) {\n\t\t\t\t   \t\t\t\tconsole.log(\"F: Entered modified point block for id: \", this.props.id);\n\t\t   \t\t\t\t\t\tresetGeometry();\n\t\t   \t\t\t\t\t\tbreak;\n\t\t   \t\t\t\t\t}\n\t\t   \t\t\t\t};\n\t\t   \t\t\t}\n    \t\t\t\tbreak;\n    \t\t\t// case \"Point\": \n    \t\t\t\n    \t\t}\n    \t}\n    }\n    getGeometryForFeature(geoJson) {\n    \tvar {map,maps} = this.props;\n    \tswitch(geoJson.geometry.type) {\n    \t\tcase \"Polygon\":\n\t\t    \tvar latLngs = geoJson.geometry.coordinates[0].map(coordinate => new maps.LatLng({lng : coordinate[0], lat: coordinate[1]}));\n\t\t    \tlatLngs.pop(); //Remove the last item.\n\t\t    \tvar properties = geoJson.properties;\n\t\t    \tvar polygon = new maps.Data.Polygon([latLngs]);\n\t\t    \treturn polygon;\n\t\t    // case \"Point\": //TODO: Add all the types.\n\t\t    default:\n\t\t    \tconsole.warn(\"You cannot use anything other than Polygons for features currently.\");\n    \t}\n    \treturn null;    \t\n    }\n    generateFeatureFromGeoJson(geoJson) {\n    \tvar {map, maps} = this.props;\n    \tvar geometry = this.getGeometryForFeature(geoJson);\n    \tvar feature = new maps.Data.Feature({\n    \t\tgeometry,\n    \t\tid : this.props.id,\n    \t\tproperties : geoJson.properties\n    \t});\n    \treturn feature;\n    }\n    checkPropEditable(props) {\n      // console.log(\"Checking editable.\");\n      try {\n        if(typeof props.editable !== 'undefined' && props.editable) {\n          props.data.overrideStyle(this.state.feature, {editable : true});\n        }\n        else\n          props.data.overrideStyle(this.state.feature, {editable : false});\n\n      }\n      catch(e) {\n        console.error(e);\n      }\n    }    \n\n    render() {\n    \tif(this.props.data && this.state.feature) {\n\t   \t\tthis.checkPropEditable(this.props);\n\n    \t}\n    \tconsole.log(\"F: feature Rendered\");\n        return <noscript />;\n    }\n}\n\nFeature.propTypes = {\n\tmaps : React.PropTypes.object,\n\tmap : React.PropTypes.object,\n\tdata : React.PropTypes.object,\n\tgeoJson : React.PropTypes.object.isRequired,\n\tid : React.PropTypes.string.isRequired,\n  onChange : React.PropTypes.func,\n  onClick : React.PropTypes.func\n}\n\nexport default Feature;\n"]}