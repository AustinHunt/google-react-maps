{"version":3,"sources":["../../src/components/map.js"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["import React from 'react';\nimport mapsapi from 'google-maps-api';\nimport {refreshComponentFromProps} from '../utils/utils';\n\n/**\n* See [Google Maps Javascript API]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference}\n* @namespace google.maps\n* @memberof google\n*/\n\n/**\n* See [LatLngLiteral object specification]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#LatLngLiteral}\n* @class google.maps.LatLngLiteral\n* @memberof google.maps\n* \n* @property {number} lat\n* @property {number} lng\n*/\n\n/**\n* The Map Component in the root component for the google maps library. It handles the interface between the google maps javascript api and the implementation of the other components.\n* @class Map\n*\n* @property {string} api-key Required. The javascript api key from your [google console]{@link http://console.developer.google.com}.\n* @property {object} mapOptions Optional. A google.maps.MapOptions object.\n*\n* @property {object} props\n* @property {number} props.zoom\n* @property {google.maps.LatLngLiteral} props.center\n* @property {object} props.latLngBounds \n* @property {google.maps.LatLngLiteral} props.latLngBounds.sw\n* @property {google.maps.LatLngLiteral} props.latLngBounds.ne\n*/\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'Map';\n        \n\n        var _div_id = \"map_div_\" + Math.floor(Date.now() * Math.random()).toString();\n        /** \n        *   @property {object} state The Map component's internal state.\n        *   @property {object} state.maps A google maps javascript api reference.\n        *   @property {object} state._div_id The div id of this map.\n        */\n        this.state = {\n        \tmaps : null,\n        \t_div_id\n        }\n\n        this.getOptions = this.getOptions.bind(this);\n\n        this.refreshComponentFromProps = refreshComponentFromProps.bind(this);\n\n        this.centerPropDidChange = this.centerPropDidChange.bind(this);\n        this.boundsPropDidChange = this.boundsPropDidChange.bind(this);\n        this.zoomPropDidChange = this.zoomPropDidChange.bind(this);\n\n    }\n    getOptions() {\n        var mapOptions = {\n            zoom : 4,\n            mapTypeId : maps.MapTypeId[!this.props.mapType? \"ROADMAP\" : this.props.mapType],\n            data : null\n        }\n        \n        if(this.props.mapOptions)\n            mapOptions = Object.assign(mapOptions, this.props.mapOptions);\n\n        return mapOptions;\n    }\n    centerPropDidChange() {\n        var {maps,map} = this.state;\n        var {center} = this.props;\n        if(center)\n            return !new maps.LatLng(center.lat,center.lng).equals(map.getCenter());\n        else\n            return false;\n    }\n    centerHandleChange() {\n        this.state.maps.setCenter(this.props.center);\n    }\n    boundsPropDidChange() {\n        var {bounds} = this.props;\n        return bounds ? !this.state.map.getLatLngBounds().equals(bounds) : false;\n    }\n    boundsHandleChange() {\n        //TODO: Handle bounds change.\n    }\n    zoomPropDidChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        return typeof zoom !== 'undefined' ? (zoom != map.getZoom()) : false;\n    }\n    zoomHandleChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        try {\n            console.log(\"MC : Setting Zoom\", zoom, map);\n            map.setZoom(zoom);        \n        }\n        catch(e) {\n            console.error(e);\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"MC : Component did mount.\");\n\n    \tvar initMapComponentWithLibrary = (maps) => {\n\n    \t\twindow.maps = maps;\n    \t\tvar mapOptions = this.getOptions();            \n            try {\n        \t\tvar map = new maps.Map( document.getElementById(this.state._div_id) , mapOptions);\n\n                map.setCenter(!this.props.center? new maps.LatLng(39.5, -98.35) : new maps.LatLng(this.props.center.lat,this.props.center.lng));\n            }\n            catch(e) {\n                console.error(e);\n            }\n            this.setState({\n                map,\n                maps\n            }, this.refreshComponentFromProps);\n\n    \t}\n\n    \tif(this.props[\"api-key\"]) {\n    \t\tif(!window.maps)\n\t\t    \tmapsapi(this.props[\"api-key\"], ['drawing','geometry','places'])().then(initMapComponentWithLibrary);\n\t\t    else\n\t\t    \tinitMapComponentWithLibrary(window.maps);\n    \t}\n    }\n    componentDidUpdate() {\n        console.log(\"MC: Component Did Update\");\n        if(this.state.map)\n            this.refreshComponentFromProps();\n    }\n    render() {\n    \tvar children = [];\n    \tvar controls = [];\n\n        if(this.state.maps && this.state.map && this.props.children) \n\t    \tchildren = React.Children.map(this.props.children, child => child ? React.cloneElement(child, {\n\t    \t\tmaps : this.state.maps,\n\t    \t\tmap : this.state.map\n\t    \t}) : undefined );\n\n        if(this.state.maps && this.state.map && this.props.controls && this.props.controls.constructor.name === 'Array') {\n            controls = React.Children.map(this.props.controls, control => control ? React.cloneElement(control, {\n                maps : this.state.maps,\n                map : this.state.map\n            }) : undefined ); \n\n        }\n        \n        return <div id={this.state._div_id} style={this.props.style}>\n        \t<div>{children}</div>\n            <div>{controls}</div>\n\n        </div>;\n    }\n}\n\nMap.propTypes = {\n\t\"api-key\" : React.PropTypes.string.isRequired,\n\tstyle : React.PropTypes.object,\n    mapType : React.PropTypes.string,\n    zoom : React.PropTypes.number,\n    center : React.PropTypes.shape({\n        lat : React.PropTypes.number,\n        lng : React.PropTypes.number\n    }),\n    bounds : React.PropTypes.shape({\n        sw : React.PropTypes.shape({\n            lat : React.PropTypes.number,\n            lng : React.PropTypes.number\n        }),\n        ne : React.PropTypes.shape({\n            lat : React.PropTypes.number,\n            lng : React.PropTypes.number\n        }) \n    })\n}\n\nexport default Map;\n"]}