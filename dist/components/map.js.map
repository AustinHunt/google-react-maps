{"version":3,"sources":["../../src/components/map.js"],"names":[],"mappings":"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","file":"map.js","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport mapsapi from 'google-maps-api';\nimport {refreshComponentFromProps, isValidMapListener} from '../utils/utils';\n\n/**\n* See [Google Maps Javascript API]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference}\n* @namespace google.maps\n* @memberof google\n*/\n\n/**\n* See [LatLngLiteral object specification]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#LatLngLiteral}\n* @class google.maps.LatLngLiteral\n* @memberof google.maps\n* \n* @property {number} lat\n* @property {number} lng\n*/\n\n/**\n* The Map Component in the root component for the google maps library. It handles the interface between the google maps javascript api and the implementation of the other components.\n* @class Map\n*\n* @property {string} api-key Required. The javascript api key from your [google console]{@link http://console.developer.google.com}.\n* @property {object} mapOptions Optional. A google.maps.MapOptions object.\n*\n* @property {object} props\n* @property {function} props.onMount callback(map, maps) Get's called right after the component is done it's initial render. (Key for triggering outside events that require google maps api to be instantiated.)\n* @property {number} props.zoom\n* @property {google.maps.LatLngLiteral} props.center\n* @property {object} props.latLngBounds \n* @property {google.maps.LatLngLiteral} props.latLngBounds.sw\n* @property {google.maps.LatLngLiteral} props.latLngBounds.ne\n*/\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'Map';\n        \n\n        var _div_id = \"map_div_\" + Math.floor(Date.now() * Math.random()).toString();\n        /** \n        *   @property {object} state The Map component's internal state.\n        *   @property {object} state.maps A google maps javascript api reference.\n        *   @property {object} state._div_id The div id of this map.\n        */\n        this.state = {\n        \tmaps : null,\n            map : null,\n        \t_div_id\n        }\n        this.listeners = [];\n        \n        this.getGeocoder = this.getGeocoder.bind(this);\n        this.getGoogleMapsApi = this.getGoogleMapsApi.bind(this);\n        this.getGoogleMap = this.getGoogleMap.bind(this);\n\n        this.getOptions = this.getOptions.bind(this);\n\n        this.refreshComponentFromProps = refreshComponentFromProps.bind(this);\n\n        this.centerPropDidChange = this.centerPropDidChange.bind(this);\n        this.boundsPropDidChange = this.boundsPropDidChange.bind(this);\n        this.zoomPropDidChange = this.zoomPropDidChange.bind(this);\n\n        this.addListener = this.addListener.bind(this);\n        this.removeListeners = this.removeListeners.bind(this);\n\n        this.setupMapListenerHooks = this.setupMapListenerHooks.bind(this);\n    }\n    /** Gets the instance of the geocoder tied to this google map. */\n    getGeocoder() {\n        return this.state.geocoder;\n    }\n    /** Gets the google maps api reference from within the component. (Could be used to do google maps api stuff outside of the component) */\n    getGoogleMapsApi() {\n        return this.state.maps;\n    }\n    /** Gets the google maps instance created by `new maps.Map()` keyword. */\n    getGoogleMap() {\n        return this.state.map;\n    }\n    getOptions(maps) {\n        var mapOptions = {\n            zoom : 4,\n            mapTypeId : maps.MapTypeId[!this.props.mapType? \"ROADMAP\" : this.props.mapType],\n            data : null\n        }\n        \n        if(this.props.optionsConstructor)\n            mapOptions = Object.assign(mapOptions, new this.props.optionsConstructor(maps));\n\n        return mapOptions;\n    }\n    centerPropDidChange() {\n        var {maps,map} = this.state;\n        var {center} = this.props;\n        if(center)\n            return !new maps.LatLng(center.lat,center.lng).equals(map.getCenter());\n        else\n            return false;\n    }\n    centerHandleChange() {\n        const center = this.state.map.getCenter();\n        if(this.props.center.lat != center.lat && this.props.center.lng != center.lng) {\n            this.state.map.setCenter(this.props.center);\n        }\n    }\n    boundsPropDidChange() {\n        var {bounds} = this.props;\n        if(bounds && bounds.sw && bounds.ne) {\n            bounds = new this.state.maps.LatLngBounds(bounds.sw, bounds.ne);\n        }\n        return bounds ? !this.state.map.getBounds().equals(bounds) : false;\n    }\n    boundsHandleChange() {\n        console.log(\"Bounds Handle Change\")\n        var {bounds} = this.props;\n        if(bounds && bounds.sw && bounds.ne) {\n            bounds = new this.state.maps.LatLngBounds(bounds.sw, bounds.ne);\n            this.state.map.panToBounds(bounds);\n        }\n        //TODO: Handle bounds change.\n    }\n    zoomPropDidChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        return typeof zoom !== 'undefined' ? (zoom != map.getZoom()) : false;\n    }\n    zoomHandleChange() {\n        var {map} = this.state;\n        var {zoom} = this.props;\n        try {\n            map.setZoom(zoom);        \n        }\n        catch(e) {\n            console.error(e);\n        }\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n    }\n    removeListeners() {\n        while(this.listeners.length > 0) {\n            this.listeners.pop().remove();\n        }\n    }\n    setupMapListenerHooks() {\n        var {maps, map} = this.state;\n        if(maps && map) {\n            this.removeListeners();\n            var assemble = (name, callback) => this.addListener(maps.event.addListener(map, name, callback));\n            var props = Object.getOwnPropertyNames(this.props);\n\n            props.forEach(prop => {\n                if(/^on.*$/.test(prop)) {\n                    var action = prop.slice(2, prop.length); //Remove the 'on' in front of the prop-name.\n                    if(isValidMapListener(action)) {\n                        switch(action.toLowerCase()) {\n                            case 'bounds_changed':case 'boundschanged':\n                                \n                                assemble('bounds_changed', event => {\n                                    const bounds = map.getBounds()? {ne : map.getBounds().getNorthEast().toJSON(), sw : map.getBounds().getSouthWest().toJSON()} : null;\n                                    this.props[prop](bounds, event)\n                                });\n                                break;\n                            case 'center_changed':case 'centerchanged':\n                                assemble('center_changed', event => {\n                                    const center = map.getCenter();\n                                    this.props[prop](center, event);\n                                });\n                                break;\n                            case 'zoom_changed':case 'zoomchanged':\n                                assemble('zoom_changed', event => {\n                                    const zoom = map.getZoom();\n                                    this.props[prop](zoom, event);\n                                });\n\n                            default:\n                                assemble(action.toLowerCase(), this.props[prop]);\n                                break;\n                        }\n                    }\n                    else {\n                        if(action.toLowerCase() !== 'mount') {\n                            console.warn(new Error(\"You tried adding \" + prop + \" which is not a valid action for a <Map /> component.\"));\n                        }\n                    }\n\n                }\n            });\n        }\n    }\n    componentDidMount() {\n\n\n    \tvar initMapComponentWithLibrary = (maps) => {\n\n    \t\t// window.maps = maps;\n    \t\tvar mapOptions = this.getOptions(maps);            \n            try {\n\n                var geocoder = new maps.Geocoder();\n        \t\tvar map = new maps.Map( ReactDom.findDOMNode(this.refs.map) , mapOptions);\n\n                map.setCenter(!this.props.center? new maps.LatLng(39.5, -98.35) : new maps.LatLng(this.props.center.lat,this.props.center.lng));\n                if(this.props.bounds && this.props.bounds.sw && this.props.bounds.ne) {\n                    const bounds = new maps.LatLngBounds(this.props.bounds.sw, this.props.bounds.ne);\n                    map.panToBounds(bounds);\n                }\n            }\n            catch(e) {\n                console.error(e);\n            }\n            this.setState({\n                map,\n                maps,\n                geocoder\n            }, () => {\n                this.refreshComponentFromProps();\n                if(typeof this.props.onMount === 'function') {\n                    this.props.onMount(this.getGoogleMap(), this.getGoogleMapsApi());\n                }\n            });\n\n            this.setupMapListenerHooks();\n    \t}\n\n    \tif(this.props[\"api-key\"]) {\n    \t\t// if(!window.maps)\n\t\t    \tmapsapi(this.props[\"api-key\"], ['drawing','geometry','places'])().then(initMapComponentWithLibrary);\n\t\t    // else\n\t\t    // \tinitMapComponentWithLibrary(window.maps);\n    \t}\n    }\n    componentDidUpdate() {\n\n        if(this.state.map) {\n            this.refreshComponentFromProps();\n            this.setupMapListenerHooks();// ?? This may not be necessary. Only on didMount.\n        }\n    }\n    componentWillUnmount() {\n          this.removeListeners();\n    }\n    render() {\n    \tvar children = [];\n    \tvar controls = [];\n\n        if(this.state.maps && this.state.map && this.props.children) \n\t    \tchildren = React.Children.map(this.props.children, child => child ? React.cloneElement(child, {\n\t    \t\tmaps : this.state.maps,\n\t    \t\tmap : this.state.map\n\t    \t}) : undefined );\n\n        if(this.state.maps && this.state.map && this.props.controls && this.props.controls.constructor.name === 'Array') {\n            controls = React.Children.map(this.props.controls, control => control ? React.cloneElement(control, {\n                maps : this.state.maps,\n                map : this.state.map\n            }) : undefined ); \n\n        }\n        \n        return <div ref=\"map\" id={this.state._div_id} style={this.props.style}>\n        \t<div>{children}</div>\n            <div>{controls}</div>\n\n        </div>;\n    }\n}\n\nMap.propTypes = {\n    didMount : React.PropTypes.func,\n    optionsConstructor : React.PropTypes.func,\n\t\"api-key\" : React.PropTypes.string.isRequired,\n\tstyle : React.PropTypes.object,\n    mapType : React.PropTypes.string,\n    zoom : React.PropTypes.number,\n    center : React.PropTypes.shape({\n        lat : React.PropTypes.number,\n        lng : React.PropTypes.number\n    }),\n    bounds : React.PropTypes.shape({\n        sw : React.PropTypes.shape({\n            lat : React.PropTypes.number,\n            lng : React.PropTypes.number\n        }),\n        ne : React.PropTypes.shape({\n            lat : React.PropTypes.number,\n            lng : React.PropTypes.number\n        }) \n    })\n}\n\nexport default Map;\n"]}