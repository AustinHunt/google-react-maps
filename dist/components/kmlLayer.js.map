{"version":3,"sources":["../../src/components/kmlLayer.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEM,Q;;;AACF,sBAAY,KAAZ,EAAmB;AAAA;;AAAA,gGACT,KADS;;AAEf,cAAK,WAAL,GAAmB,UAAnB;AACA,cAAK,KAAL,GAAa;AACZ,sBAAW;AADC,SAAb;AAHe;AAMlB;;;;4CACmB;AACnB,gBAAG,KAAK,KAAL,CAAW,GAAX,IAAkB,KAAK,KAAL,CAAW,IAAhC,EACA;AAAA,6BASK,KAAK,KATV;AAAA,oBAEE,GAFF,UAEE,GAFF;AAAA,oBAGE,IAHF,UAGE,IAHF;AAAA,oBAIE,MAJF,UAIE,MAJF;AAAA,oBAKE,gBALF,UAKE,gBALF;AAAA,oBAME,cANF,UAME,cANF;AAAA,oBAOE,mBAPF,UAOE,mBAPF;AAAA,oBAQE,GARF,UAQE,GARF;;;AAWC,oBAAI,WAAW,IAAI,KAAK,QAAT,CAAkB;AAChC,4BADgC;AAEhC,kCAFgC;AAGhC,sDAHgC;AAIhC,kDAJgC;AAKhC,4DALgC;AAMhC;AANgC,iBAAlB,CAAf;;AASA,qBAAK,QAAL,CAAc,EAAC,kBAAD,EAAd;AACA,aAtBD,MAwBC,QAAQ,KAAR,CAAc,IAAI,KAAJ,CAAU,4GAAV,CAAd;AACD;;;+CACsB;AACtB,gBAAG,KAAK,KAAL,CAAW,QAAd,EACC,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,IAA3B;AACD;;;iCACQ;AACR,gBAAG,KAAK,KAAL,CAAW,QAAX,IAAuB,KAAK,KAAL,CAAW,GAAX,IAAkB,KAAK,KAAL,CAAW,QAAX,CAAoB,GAAhE,EACC,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,KAAK,KAAL,CAAW,GAAtC;AACE,mBAAO;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;;;EA3CkB,gBAAM,S;;AA8C7B,SAAS,SAAT,GAAqB;AACpB,UAAO,gBAAM,SAAN,CAAgB,MADH;AAEpB,SAAM,gBAAM,SAAN,CAAgB,MAFF;AAGpB,YAAS,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UAHZ;AAIpB,sBAAmB,gBAAM,SAAN,CAAgB,IAJf;AAKpB,oBAAiB,gBAAM,SAAN,CAAgB,IALb;AAMpB,yBAAsB,gBAAM,SAAN,CAAgB,IANlB;AAOpB,SAAM,gBAAM,SAAN,CAAgB,MAAhB,CAAuB;AAPT,CAArB;;kBAUe,Q","file":"kmlLayer.js","sourcesContent":["import React from 'react';\n\nclass KmlLayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'KmlLayer';\n        this.state = {\n        \tKmlLayer : null\n        }\n    }\n    componentDidMount() {\n    \tif(this.props.map && this.props.maps)\n    \t{\n    \t\tvar {\n    \t\t\tmap, \n    \t\t\tmaps, \n    \t\t\tzIndex, \n    \t\t\tpreserveViewport,\n    \t\t\tscreenOverlays,\n    \t\t\tsuppressInfoWindows,\n    \t\t\turl\n    \t\t} = this.props;\n\n    \t\tvar KmlLayer = new maps.KmlLayer({\n    \t\t\tmap,\n    \t\t\tzIndex,\n    \t\t\tpreserveViewport,\n    \t\t\tscreenOverlays,\n    \t\t\tsuppressInfoWindows,\n    \t\t\turl\n    \t\t});\n\n    \t\tthis.setState({KmlLayer});\n    \t}\n    \telse\n    \t\tconsole.error(new Error(\"You must put <KmlLayer /> components within a <Map /> context. Or provide the maps and map props manually.\"))\n    }\n    componentWillUnmount() {\n    \tif(this.state.KmlLayer)\n\t    \tthis.state.KmlLayer.setMap(null);\n    }\n    render() {\n    \tif(this.state.KmlLayer && this.props.url != this.state.KmlLayer.url)\n\t    \tthis.state.KmlLayer.setUrl(this.props.url);\n        return <div>KmlLayer</div>;\n    }\n}\n\nKmlLayer.propTypes = {\n\tmaps : React.PropTypes.object,\n\tmap : React.PropTypes.object,\n\tzIndex : React.PropTypes.number.isRequired,\n\tpreserveViewport : React.PropTypes.bool,\n\tscreenOverlays : React.PropTypes.bool,\n\tsuppressInfoWindows : React.PropTypes.bool,\n\turl : React.PropTypes.string.isRequired\n}\n\nexport default KmlLayer;\n"]}